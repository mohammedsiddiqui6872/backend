# ==============================================
# GRIT Services Multi-Tenant Backend Configuration
# Production Environment Example
# ==============================================

# Basic Configuration
NODE_ENV=production
PORT=5000

# Database Configuration
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/gritservices?retryWrites=true&w=majority

# Enhanced Database Settings (Optimized for production)
DB_MAX_POOL_SIZE=20
DB_MIN_POOL_SIZE=5
DB_MAX_IDLE_TIME=30000
DB_SERVER_SELECTION_TIMEOUT=5000
DB_SOCKET_TIMEOUT=45000
DB_HEARTBEAT_FREQUENCY=10000
DB_READ_PREFERENCE=primary
DB_READ_CONCERN=majority
DB_WRITE_CONCERN=majority
DB_WRITE_TIMEOUT=10000
DB_MAX_STALENESS=120
DB_AUTH_SOURCE=admin

# Security Configuration
JWT_SECRET=your-super-secure-jwt-secret-key-here-min-32-chars
ENCRYPTION_KEY=your-32-character-encryption-key-here

# Super Admin Configuration (Environment-based, secure)
SUPER_ADMIN_EMAIL=admin@gritservices.ae
SUPER_ADMIN_PASSWORD=YourSecurePasswordHere2024!
SUPER_ADMIN_MFA=true

# Secondary Super Admin (Optional)
SUPER_ADMIN_EMAIL_2=backup@gritservices.ae
SUPER_ADMIN_PASSWORD_2=AnotherSecurePasswordHere2024!
SUPER_ADMIN_MFA_2=true

# GRIT Services Admin (With hashed password - more secure)
GRIT_ADMIN_EMAIL=gritservices@gritservices.ae
GRIT_ADMIN_PASSWORD_HASH=$2a$12$hash-generated-with-bcrypt
GRIT_ADMIN_MFA=true

# Strict MFA Enforcement
STRICT_MFA=true

# Redis Configuration (For distributed caching and session management)
REDIS_URL=redis://username:password@redis-host:6379
REDIS_DB=0
REDIS_KEY_PREFIX=grit:

# Frontend URLs (Comma-separated for CORS)
FRONTEND_URL=https://portal.gritservices.ae,https://api.gritservices.ae,https://gritservices-frontend.vercel.app,https://saas-portal-rho-six.vercel.app

# File Upload Configuration
MAX_FILE_SIZE_PROFILE=2097152
MAX_FILE_SIZE_MENU=5242880
MAX_FILE_SIZE_DOCUMENTS=10485760
MAX_FILE_SIZE_IMPORT=2097152
MAX_FILE_SIZE_RECEIPTS=5242880

# Cloudinary Configuration (For file storage)
CLOUDINARY_CLOUD_NAME=your-cloudinary-name
CLOUDINARY_API_KEY=your-cloudinary-api-key
CLOUDINARY_API_SECRET=your-cloudinary-api-secret

# Email Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# SMS Configuration (Twilio)
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# Push Notifications (Firebase)
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_PRIVATE_KEY_ID=your-firebase-key-id
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour Firebase Private Key\n-----END PRIVATE KEY-----\n"
FIREBASE_CLIENT_EMAIL=firebase-adminsdk@your-project.iam.gserviceaccount.com
FIREBASE_CLIENT_ID=your-client-id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token

# Stripe Configuration (For payments)
STRIPE_SECRET_KEY=sk_live_your-stripe-secret-key
STRIPE_PUBLISHABLE_KEY=pk_live_your-stripe-publishable-key
STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# Rate Limiting Configuration
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=500
RATE_LIMIT_SKIP_FAILED_REQUESTS=false
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false

# Analytics Configuration
ANALYTICS_CACHE_TTL=300
ANALYTICS_REALTIME_CACHE_TTL=60

# Security Headers
HSTS_MAX_AGE=31536000
CSP_REPORT_URI=https://your-domain.com/csp-report

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=logs/app.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=5

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30000

# Session Configuration
SESSION_SECRET=your-session-secret-key-here
SESSION_TIMEOUT=1800000

# API Configuration
API_VERSION=v1
API_PREFIX=/api

# Monitoring Configuration
ENABLE_MONITORING=true
MONITORING_INTERVAL=60000

# Performance Configuration
ENABLE_COMPRESSION=true
COMPRESSION_LEVEL=6
COMPRESSION_THRESHOLD=1024

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_INTERVAL=86400000
BACKUP_RETENTION_DAYS=30

# ==============================================
# Important Security Notes:
# ==============================================
# 1. Always use strong, unique passwords
# 2. Enable MFA in production environments
# 3. Use environment-specific secrets
# 4. Never commit real credentials to version control
# 5. Rotate secrets regularly
# 6. Use hashed passwords where possible
# 7. Configure Redis with authentication in production
# 8. Use SSL/TLS for all external connections
# 9. Implement proper firewall rules
# 10. Monitor and log security events
# ==============================================